# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
      - job:
        steps:
          # - script: ./buildSomething.sh #Python environment??

          - task: CopyFiles@2
            inputs:
              contents: 'lambda_function/**'
              targetFolder: $(Build.BinariesDirectory)

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.BinariesDirectory)'
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/lambda_function.zip'
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

          - task: CloudFormationCreateOrUpdateStack@1
            inputs:
              awsCredentials: 'AWS-S3-Connection'
              regionName: 'eu-central-1'
              stackName: 's3-lambdapackages'
              templateSource: 'file'
              templateFile: 's3.yml'  
              
          - task: S3Upload@1
            inputs:
              awsCredentials: 'AWS-S3-Connection'
              regionName: 'eu-central-1'
              bucketName: 'lambda-launchpad-packages22'
              sourceFolder: $(Build.ArtifactStagingDirectory)
              globExpressions: '$(Build.ArtifactStagingDirectory)/drop/lambda_function.zip'

- stage: Deploy
  jobs:
      - job:
        steps:
        - task: CloudFormationCreateOrUpdateStack@1
          inputs:
            awsCredentials: 'AWS-S3-Connection'
            regionName: 'eu-central-1'
            stackName: 'microservice'
            templateSource: 'file'
            templateFile: 'microservice.yml'
